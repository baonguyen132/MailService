/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package udpserver.Server;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import udpserver.Client.ClientRequestServer;
import udpserver.Client.Frame;
import udpserver.Server.ItemMail;
import udpserver.Client.Main;
import udpserver.Client.ThreadClient;
import udpserver.Client.User;
import udpserver.Interface.Handle;

/**
 *
 * @author PC
 */
public class Serve extends javax.swing.JFrame {

    private static InetAddress host;
    private static final int PORT = 1234;

    private static DatagramSocket dgramSocket;
    private Thread thread ;
    
    private Vector vctData1 = new Vector();
    private Vector vctHeader1 = new Vector();
    
    private Vector vctData2 = new Vector();
    private Vector vctHeader2 = new Vector();
    
    private static  String userChoose ;
    private int soVct2 = 0 ;
    
    /**
     * Creates new form Serve
     */
    public Serve() {
        try {
            host = InetAddress.getLocalHost();
            dgramSocket = new DatagramSocket();
            
            String data = ServerResponeClient.SERVER_LOGIN.name()+"~server";
            DatagramPacket outPkt = new DatagramPacket(data.getBytes(), data.length(),host, PORT);
            dgramSocket.send(outPkt);
            
            vctHeader1.add("ID");vctHeader1.add("Port");vctHeader1.add("username");
            vctHeader2.add("Sender");vctHeader2.add("Subject");
            
            ThreadServe threadServe = new ThreadServe(dgramSocket, new Handle() {
                @Override
                public void handle(String message) {
                    String data[] = message.split("~");
                    if(data[0].equals(ServerResponeClient.HAVE_USER.name())){
                       
                        String datalist = data[1];
                        System.out.println(data[1]);
                        String item[] = datalist.split("@");
                          
                        
                        Vector row = new Vector();
                        row.add(item[0]);
                        row.add(item[1]);
                        row.add(item[2]);
                        vctData1.add(row);
                        
                        System.out.println(vctData1);
                        
                        listuser.setModel(new DefaultTableModel(vctData1, vctHeader1));
                    }
                    else if(data[0].equals(ServerResponeClient.RESPONE_LIST_MAIL.name())){
                        for (int j = 0; j < vctData2.size(); j++) {
                            vctData2.remove(j);
                            System.out.println(j);
                        }
                        String datalist = data[1];
                        String itemData[] = datalist.split("//");
                        for (int i = 1; i < itemData.length; i++) {
                            String item[] = itemData[i].split("@");
                            
                            Vector row = new Vector();
                            row.add(item[0]);
                            row.add(item[1]);
                            vctData2.add(row);
                            
                            soVct2++ ;
                        }
                        
                        jTable2.setModel(new DefaultTableModel(vctData2, vctHeader2));
                    }
                    else if(data[0].equals(ServerResponeClient.RESPONE_ITEM_MAIL.name())){
                        ItemMail im = new ItemMail(data[1]);
                        im.setVisible(true);
                        
                    }
                    
                    
                }
            });
            
            
            threadServe.start();
            initComponents();
        } catch (UnknownHostException ex) {
            Logger.getLogger(Serve.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SocketException ex) {
            Logger.getLogger(Serve.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Serve.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listuser = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listuser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Port", "username"
            }
        ));
        listuser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listuserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listuser);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 779, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "sender", "subject"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 760, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void listuserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listuserMouseClicked
        try {
            int selectedRow = listuser.getSelectedRow();
            Vector vctSelectedRow = (Vector) vctData1.get(selectedRow);
           
            userChoose = (String) vctSelectedRow.get(2) ;
            String data = ServerResponeClient.SERVER_REQUEST_LIST_MAIL.name()+"~"+userChoose ;
            
            DatagramPacket outPkt = new DatagramPacket(data.getBytes(), data.length(), host, PORT);
            dgramSocket.send(outPkt);
            
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_listuserMouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        try {
            int selectedRow = jTable2.getSelectedRow();
            Vector vctSelectedRow = (Vector) vctData2.get(selectedRow);
           
            String subject = (String) vctSelectedRow.get(1) ;
            String data = ServerResponeClient.SERVER_REQUEST_ITEM_MAIL.name()+"~"+userChoose+"~"+subject ;
            
            
            DatagramPacket outPkt = new DatagramPacket(data.getBytes(), data.length(), host, PORT);
            dgramSocket.send(outPkt);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Serve().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable listuser;
    // End of variables declaration//GEN-END:variables
}
